version: '3'
services:
  web:
    image: nginx
    volumes:
      - ./.docker/conf/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - .:/var/www/html
      - ./.docker/log/nginx:/var/log/nginx
    ports:
      - ${PORT}:80
    restart: unless-stopped
    depends_on:
      - php
    networks:
      - internal
  php:
    build: .docker
    restart: unless-stopped
    volumes:
      - ./.docker/conf/php/php.ini:/usr/local/etc/php/conf.d/php.ini
      - ./.docker/conf/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - .:/var/www/html
    depends_on:
      - master
    networks:
      - internal
  composer:
    image: composer
    volumes:
      - .:/app
    command: install
  master:
    image: "citusdata/citus:12.1.1"
    labels: ["com.citusdata.role=Master"]
    environment: &AUTH
      POSTGRES_DB: "${DB_NAME}"
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      PGUSER: "${DB_USER}"
      PGPASSWORD: "${DB_PASSWORD}"
      POSTGRES_HOST_AUTH_METHOD: trust
    # volumes:
    #   - ./.docker/conf/postgres/:/docker-entrypoint-initdb.d/
    networks:
      - internal
  worker:
    image: "citusdata/citus:12.1.1"
    labels: ["com.citusdata.role=Worker"]
    depends_on:
      - manager
    environment: *AUTH
    command: "/wait-for-manager.sh"
    volumes:
      - healthcheck-volume:/healthcheck
    networks:
      - internal
  manager:
    image: "citusdata/membership-manager:0.3.0"
    volumes:
      - "${DOCKER_SOCK:-/var/run/docker.sock}:/var/run/docker.sock"
      - healthcheck-volume:/healthcheck
    depends_on:
      - master
    environment: *AUTH
    networks:
      - internal

volumes:
  healthcheck-volume:

networks:
  internal:
    driver: bridge
